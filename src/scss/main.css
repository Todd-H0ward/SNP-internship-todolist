@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
/***
    The new CSS reset - version 1.11.2 (last updated 15.11.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Fix mobile Safari increase font-size on landscape mode */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu, summary {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
  box-sizing: border-box;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
  box-sizing: border-box;
}

/* Remove details summary webkit styles */
::-webkit-details-marker {
  display: none;
}

* {
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  -webkit-tap-highlight-color: transparent;
}

/* Colors */
.h1, .todos__title {
  font-size: clamp(40px, 10vw, 96px);
  font-weight: 700;
  line-height: 109%;
  letter-spacing: 2px;
}

.p-normal, body, .input {
  font-size: clamp(15px, 5vw, 20px);
  font-weight: 400;
  line-height: 142%;
}

.p-small, .todos__hint, .todos__controls {
  font-size: clamp(14px, 3vw, 17px);
  font-weight: 400;
  line-height: 142%;
  letter-spacing: -0.17px;
}

/* Colors */
/* Colors */
.active, .task__title--active, .task--active, .input:focus {
  box-shadow: inset 0 0 1px 2px #3B7E7B;
}

/* Colors */
.button {
  padding: 1px 7px;
  color: #1B1F2B;
  border-radius: 5px;
  outline: 1px solid #1B1F2B;
  cursor: pointer;
  transition: background 0.4s, color 0.2s;
}
.button:hover {
  color: #FFF;
  background: rgba(27, 31, 43, 0.7);
}
.button:active {
  color: #FFF;
  background: #1B1F2B;
}
.button--active {
  outline: 3px solid #286562;
}
.button--active:hover {
  background: rgba(40, 101, 98, 0.4);
}

/* Colors */
.checkbox {
  display: flex;
  flex: none;
  width: clamp(24px, 1.142rem + 1.53vw, 30px);
  height: clamp(24px, 1.142rem + 1.53vw, 30px);
  border: 1px solid #1B1F2B;
  border-radius: 50%;
  cursor: pointer;
  transition: background 0.3s;
}
.checkbox:hover {
  background: rgba(166, 166, 166, 0.4);
}
.checkbox:checked {
  width: clamp(24px, 1.142rem + 1.53vw, 30px);
  height: clamp(24px, 1.142rem + 1.53vw, 30px);
  background: url("../icons/checkmark.svg") no-repeat;
  background-size: cover;
}

/* Colors */
.input {
  position: relative;
  padding: clamp(7px, 2.5vw, 15px) clamp(10px, 2.5vw, 20px) clamp(7px, 2.5vw, 15px) clamp(45px, 1.322rem + 6.36vw, 70px);
  color: #1B1F2B;
  background: #FFF;
  border: 1px solid #A6A6A6;
  border-radius: 10px;
  box-shadow: rgba(255, 255, 255, 0.1) 0 0 10px 3px;
  transition: all 0.3s;
}
.input::placeholder {
  font-style: italic;
  color: #A6A6A6;
}
/* Colors */
.task {
  display: flex;
  align-items: center;
  gap: clamp(5px, -0.229rem + 2.31vw, 20px);
  padding: clamp(7px, 2.5vw, 15px) clamp(10px, 2.5vw, 20px);
  color: #1B1F2B;
  background: #FFF;
  border-bottom: 1px solid #A6A6A6;
  transition: all 0.2s;
}
.task__title {
  flex: 1 1 auto;
  padding: 5px;
  word-break: break-all;
  border-radius: 5px;
}
.task__inner {
  flex: 1 1 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.task__btn {
  flex: none;
  display: flex;
  align-items: center;
  opacity: 0;
  cursor: pointer;
  transition: opacity 0.2s;
}
.task--finished {
  text-decoration: line-through;
  color: #A6A6A6;
}
.task:hover .task__btn {
  opacity: 1;
}

@media (hover: none) {
  .task__btn {
    opacity: 1;
  }
}
/* Colors */
body {
  font-family: Roboto, sans-serif;
  font-style: normal;
  color: #FFF;
  background: #1B1F2B;
}

.wrapper {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  overflow: hidden;
}

.container {
  max-width: 660px;
  width: 100%;
  padding: 0 clamp(10px, 3vw, 30px);
  margin: 0 auto;
}

.todos__inner {
  display: flex;
  flex-direction: column;
  margin-bottom: 40px;
}
.todos__title {
  padding: 10px 0;
  text-align: center;
}
.todos__wrapper {
  position: relative;
}
.todos__input {
  width: 100%;
}
.todos__arrow {
  position: absolute;
  top: 55%;
  left: clamp(0px, -0.596rem + 2.54vw, 10px);
  z-index: 5;
  display: block;
  transform: translateY(-50%);
  cursor: pointer;
}
.todos__tasks {
  border-radius: 10px;
  overflow: hidden;
}
.todos__controls {
  position: relative;
  display: none;
  grid-template-columns: repeat(3, 1fr);
  justify-content: space-between;
  align-items: center;
  padding: 8px 10px;
  color: #1B1F2B;
  background: #FFF;
  border-radius: 10px;
}
.todos__controls-text {
  font-weight: bold;
}
.todos__text {
  flex: none;
}
.todos__filters {
  display: flex;
  flex: none;
  gap: 7px;
}
.todos__hint {
  text-align: center;
}
.todos__clear {
  position: relative;
  text-align: right;
  cursor: pointer;
  opacity: 1;
  transition: opacity 200ms ease, color 0.3s;
}
.todos__clear:hover {
  color: rgba(27, 31, 43, 0.6);
}

.hidden {
  opacity: 0;
  pointer-events: none;
}

@media (max-width: 425px) {
  .todos__controls {
    grid-template-columns: repeat(2, 1fr);
    grid-row-gap: 5px;
    grid-template-rows: repeat(2, 1fr);
  }
  .todos__filters {
    grid-row: 2;
    grid-column: span 2;
    justify-content: center;
  }
}

/*# sourceMappingURL=main.css.map */
